git add . //add all the files to staging area
git commit -m "initial commit"   //committing with a message


git commit -am "haha commit"
caveats:
1.  The first is that, of course, this grabs everything that is in your working directory. So if there were some things that you didn't 
want to include in the change, they're going to get pushed up there as well. 

2.  files that are not tracked, or files that are being deleted, do not get included in this. So it works well for modifications, but for 
new files and deleted files it doesn't work well!!!!!!!!!! woah!!!!!!!!!!!!

pending: watch https://www.lynda.com/Git-tutorials/Writing-commit-messages/100222/111263-4.html
too much drag! ;/

WRITING COMMIT MESSAGES: (see this: https://gist.github.com/robertpainsi/b632364184e70900af4ab688decf6f53 )
1. if very lengthy msg, you can use editor to write :) instead of writing in cli
2. Short (72 chars or less) summary

3. More detailed explanatory text. Wrap it to 72 characters. The blank
line separating the summary from the body is critical (unless you omit
the body entirely).

Write your commit message in the imperative: "Fix bug" and not "Fixed
bug" or "Fixes bug." This convention matches up with commit messages
generated by commands like git merge and git revert.

Further paragraphs come after blank lines.

- Bullet points are okay, too.
- Typically a hyphen or asterisk is used for the bullet, followed by a
  single space. Use a hanging indent.
  
  
  
